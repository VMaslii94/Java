plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'
 
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
   // testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.testng', name: 'testng', version: '6.0.1'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
}

test{
    //        systemProperties project.properties.subMap("BrowserName");
     useTestNG() {
     boolean isBrowserProp = project.hasProperty("BrowserName");
      String browser = (isBrowserProp == true)?project.getProperty("BrowserName"):"chrome";
        if ( browser =="chrome"){
            suites "src/test/resources/testng1.xml"
        }

        else if (browser == "firefox"){
            suites "src/test/resources/testng.xml"


        }
         else {
            println ("Browser wasn't set, please check")
        }

         useDefaultListeners = true
         outputDirectory = file(("$projectDir/TestResultReport/Test"))
    }


//    useTestNG() {
//
//        suites "src/test/resources/testng.xml"
//        useDefaultListeners = true
//        outputDirectory = file(("$projectDir/TestResultReport/Test"))
//    }
   // options.suites("src/test/resources/testng.xml")

}
task smokeTests(type: Test) { // we define a task with name ‘smokeTests’
    group = 'myTestGroup'
    description = 'My new smoke task created'
    useTestNG() {
        suites 'src/test/resources/testng.xml'
        includeGroups 'all' // We define the group name by using ‘includeGroups’ parameter.
        useDefaultListeners = true
        outputDirectory = file(("$projectDir/TestResultReport/SmokeTest"))
    }
      reports.html.setDestination(file("$projectDir/TestResultReport/GradleReport")) //Reporter from Gradle framework
}

//tasks.withType(Test) {
//   systemProperty 'BrowserName', System.getProperty("BrowserName", "chrome")}
//
//    task runWithChrome(type: Test) {

//         useTestNG() {
//             suites "src/test/resources/testng.xml"
//             useDefaultListeners = true
//             outputDirectory = file(("$projectDir/TestResultReport/Test"))
//         }
////        systemProperties = [BrowserName: System.getProperty('BrowserName', 'chrome')]
//    }
//
//    task runWithFirefox(type: Test) {
//
//    }
